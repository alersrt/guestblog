version: '3.9'
name: gb_int

networks:
  gb-internal:

volumes:
  db-volume:
  db-tblspc:
  elastic-volume:
  kafka-volume:

services:

  postgresql:
    image: postgres
    build:
      context: postgres/
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db-volume:/var/lib/postgresql/data
      - db-tblspc:/u01
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    networks:
      - gb-internal

  flyway:
    image: redgate/flyway
    command: migrate info
    volumes:
      - ./flyway/flyway.toml:/flyway/conf/flyway.toml:ro
      - ../db/changelog/:/flyway/sql:ro
    networks:
      - gb-internal
    depends_on:
      postgresql:
        condition: service_healthy

  elastic:
    image: elasticsearch:8.12.2
    environment:
      - node.name=gb_int_elastic
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms128m -Xmx512m
      - ELASTIC_PASSWORD=elastic
      - xpack.security.enabled=true
    volumes:
      - elastic-volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - gb-internal

  hazelcast:
    image: hazelcast/hazelcast:latest-jdk21
    environment:
      - JAVA_OPTS=-Xms512M -Xmx1024M
      - HZ_CLUSTERNAME=gb_hazelcast
      - HZ_JET_ENABLED=true
      - HZ_USERCODEDEPLOYMENT_ENABLED=true
      - HZ_NETWORK_JOIN_TCP_IP_ENABLED=true
      - HZ_NETWORK_JOIN_TCP_IP_MEMBERS=gb_int_hazelcast_1,gb_int_hazelcast_1,gb_int_hazelcast_1
    deploy:
      replicas: 3
    ports:
      - "5701-5703:5701"
    healthcheck:
      test: curl -f http://localhost:5701/hazelcast/health/node-state || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - gb-internal

  kafka:
    image: confluentinc/cp-kafka
    build:
      context: kafka/
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Setup in KRaft
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # Cluster
      - CLUSTER_ID=AAAAAAAAAAAAAAAAAAAAAA
    volumes:
      - kafka-volume:/var/lib/kafka/data
    ports:
      - "29092:29092"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - gb-internal

  zipkin:
    image: openzipkin/zipkin
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://elastic:9200
      - ES_INDEX=zipkin
      - ES_USERNAME=elastic
      - ES_PASSWORD=elastic
    ports:
      - "9411:9411"
    depends_on:
      elastic:
        condition: service_healthy
    networks:
      - gb-internal
